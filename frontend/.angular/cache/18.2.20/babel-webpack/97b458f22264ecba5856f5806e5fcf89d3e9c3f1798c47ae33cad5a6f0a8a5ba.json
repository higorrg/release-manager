{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject, signal, computed, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ReleaseService } from '../../core/services/release.service';\nlet ReleaseHistoryComponent = class ReleaseHistoryComponent {\n  route = inject(ActivatedRoute);\n  router = inject(Router);\n  releaseService = inject(ReleaseService);\n  history = signal([]);\n  loading = signal(true);\n  error = signal(null);\n  releaseId = computed(() => this.route.snapshot.paramMap.get('id'));\n  ngOnInit() {\n    this.loadHistory();\n  }\n  loadHistory() {\n    const id = this.releaseId();\n    if (!id) {\n      this.error.set('ID da release não encontrado');\n      this.loading.set(false);\n      return;\n    }\n    this.loading.set(true);\n    this.error.set(null);\n    this.releaseService.getReleaseStatusHistory(id).subscribe({\n      next: history => {\n        this.history.set(history);\n        this.loading.set(false);\n      },\n      error: error => {\n        this.error.set('Erro ao carregar histórico: ' + (error.error?.message || error.message));\n        this.loading.set(false);\n      }\n    });\n  }\n  goBack() {\n    const id = this.releaseId();\n    if (id) {\n      this.router.navigate(['/releases', id]);\n    } else {\n      this.router.navigate(['/releases']);\n    }\n  }\n  getStatusClass(status) {\n    const statusMap = {\n      'MR_APROVADO': 'status-mr-aprovado',\n      'PARA_TESTE_SISTEMA': 'status-para-teste',\n      'PARA_TESTE_REGRESSIVO': 'status-para-teste',\n      'APROVADA_TESTE': 'status-aprovada',\n      'APROVADA_TESTE_REGRESSIVO': 'status-aprovada',\n      'REPROVADA_TESTE': 'status-reprovada',\n      'REPROVADA_TESTE_REGRESSIVO': 'status-reprovada',\n      'FALHA_BUILD_TESTE': 'status-falha',\n      'FALHA_BUILD_PRODUCAO': 'status-falha',\n      'FALHA_INSTALACAO_ESTAVEL': 'status-falha',\n      'CONTROLADA': 'status-controlada',\n      'DISPONIVEL': 'status-disponivel',\n      'REVOGADA': 'status-revogada'\n    };\n    return statusMap[status] || 'status-mr-aprovado';\n  }\n  getStatusTypeClass(status) {\n    const successStatuses = ['APROVADA_TESTE', 'APROVADA_TESTE_REGRESSIVO', 'DISPONIVEL'];\n    const errorStatuses = ['REPROVADA_TESTE', 'REPROVADA_TESTE_REGRESSIVO', 'FALHA_BUILD_TESTE', 'FALHA_BUILD_PRODUCAO', 'FALHA_INSTALACAO_ESTAVEL', 'REVOGADA'];\n    const warningStatuses = ['PARA_TESTE_SISTEMA', 'PARA_TESTE_REGRESSIVO'];\n    const infoStatuses = ['MR_APROVADO', 'CONTROLADA'];\n    if (successStatuses.includes(status)) return 'success';\n    if (errorStatuses.includes(status)) return 'error';\n    if (warningStatuses.includes(status)) return 'warning';\n    if (infoStatuses.includes(status)) return 'info';\n    return 'neutral';\n  }\n  formatDate(dateString) {\n    return new Date(dateString).toLocaleString('pt-BR');\n  }\n};\nReleaseHistoryComponent = __decorate([Component({\n  selector: 'app-release-history',\n  template: `\n    <div class=\"history-container\">\n      <div class=\"header\">\n        <button (click)=\"goBack()\" class=\"btn btn-secondary\">← Voltar</button>\n        <h1>Histórico de Mudanças</h1>\n      </div>\n\n      @if (loading()) {\n        <div class=\"loading\">\n          <p>Carregando histórico...</p>\n        </div>\n      } @else if (error()) {\n        <div class=\"error-card\">\n          <p>{{ error() }}</p>\n          <button (click)=\"loadHistory()\" class=\"btn btn-primary\">Tentar Novamente</button>\n        </div>\n      } @else {\n        <div class=\"timeline\">\n          @for (item of history(); track item.id) {\n            <div class=\"timeline-item\">\n              <div class=\"timeline-marker\" [class]=\"getStatusTypeClass(item.newStatus)\"></div>\n              <div class=\"timeline-content\">\n                <div class=\"timeline-header\">\n                  <div class=\"status-change\">\n                    @if (item.previousStatus) {\n                      <span class=\"status-badge previous\" [class]=\"getStatusClass(item.previousStatus)\">\n                        {{ item.previousStatusDisplayName }}\n                      </span>\n                      <span class=\"arrow\">→</span>\n                    }\n                    <span class=\"status-badge current\" [class]=\"getStatusClass(item.newStatus)\">\n                      {{ item.newStatusDisplayName }}\n                    </span>\n                  </div>\n                  <div class=\"timeline-meta\">\n                    <span class=\"changed-by\">{{ item.changedBy }}</span>\n                    <span class=\"changed-at\">{{ formatDate(item.changedAt) }}</span>\n                  </div>\n                </div>\n                @if (item.comments) {\n                  <div class=\"timeline-comments\">\n                    <strong>Comentários:</strong>\n                    <p>{{ item.comments }}</p>\n                  </div>\n                }\n              </div>\n            </div>\n          }\n\n          @if (history().length === 0) {\n            <div class=\"empty-state\">\n              <p>Nenhum histórico de mudanças encontrado</p>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  `,\n  styles: [`\n    .history-container {\n      max-width: 800px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .header {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n      margin-bottom: 30px;\n      padding-bottom: 20px;\n      border-bottom: 1px solid #e1e8ed;\n    }\n\n    .header h1 {\n      margin: 0;\n      color: #2c3e50;\n    }\n\n    .btn {\n      padding: 10px 16px;\n      border: none;\n      border-radius: 6px;\n      cursor: pointer;\n      font-size: 14px;\n      transition: all 0.3s;\n      text-decoration: none;\n      display: inline-block;\n    }\n\n    .btn-primary {\n      background: #3498db;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #2980b9;\n    }\n\n    .btn-secondary {\n      background: #95a5a6;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #7f8c8d;\n    }\n\n    .loading {\n      text-align: center;\n      padding: 40px;\n      color: #7f8c8d;\n    }\n\n    .error-card {\n      background: #fff5f5;\n      border: 1px solid #fed7d7;\n      color: #e53e3e;\n      padding: 20px;\n      border-radius: 8px;\n      text-align: center;\n    }\n\n    .timeline {\n      position: relative;\n      padding-left: 40px;\n    }\n\n    .timeline::before {\n      content: '';\n      position: absolute;\n      left: 15px;\n      top: 0;\n      bottom: 0;\n      width: 2px;\n      background: #e1e8ed;\n    }\n\n    .timeline-item {\n      position: relative;\n      margin-bottom: 30px;\n    }\n\n    .timeline-marker {\n      position: absolute;\n      left: -32px;\n      top: 8px;\n      width: 16px;\n      height: 16px;\n      border-radius: 50%;\n      border: 3px solid white;\n      box-shadow: 0 0 0 2px #e1e8ed;\n    }\n\n    .timeline-marker.success {\n      background: #27ae60;\n      box-shadow: 0 0 0 2px #27ae60;\n    }\n\n    .timeline-marker.warning {\n      background: #f39c12;\n      box-shadow: 0 0 0 2px #f39c12;\n    }\n\n    .timeline-marker.error {\n      background: #e74c3c;\n      box-shadow: 0 0 0 2px #e74c3c;\n    }\n\n    .timeline-marker.info {\n      background: #3498db;\n      box-shadow: 0 0 0 2px #3498db;\n    }\n\n    .timeline-marker.neutral {\n      background: #95a5a6;\n      box-shadow: 0 0 0 2px #95a5a6;\n    }\n\n    .timeline-content {\n      background: white;\n      border: 1px solid #e1e8ed;\n      border-radius: 8px;\n      padding: 20px;\n    }\n\n    .timeline-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-start;\n      margin-bottom: 12px;\n    }\n\n    .status-change {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .status-badge {\n      padding: 4px 8px;\n      border-radius: 12px;\n      font-size: 12px;\n      font-weight: 500;\n      text-transform: uppercase;\n    }\n\n    .status-badge.previous {\n      opacity: 0.7;\n    }\n\n    .arrow {\n      font-size: 16px;\n      color: #6c757d;\n    }\n\n    .status-mr-aprovado { background: #d1ecf1; color: #0c5460; }\n    .status-para-teste { background: #fff3cd; color: #856404; }\n    .status-aprovada { background: #d4edda; color: #155724; }\n    .status-reprovada { background: #f8d7da; color: #721c24; }\n    .status-falha { background: #f8d7da; color: #721c24; }\n    .status-controlada { background: #e2e3e5; color: #383d41; }\n    .status-disponivel { background: #d4edda; color: #155724; }\n    .status-revogada { background: #f8d7da; color: #721c24; }\n\n    .timeline-meta {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n      gap: 4px;\n      font-size: 12px;\n      color: #6c757d;\n    }\n\n    .changed-by {\n      font-weight: 500;\n    }\n\n    .timeline-comments {\n      background: #f8f9fa;\n      padding: 12px;\n      border-radius: 4px;\n      border-left: 3px solid #3498db;\n    }\n\n    .timeline-comments strong {\n      color: #2c3e50;\n      font-size: 14px;\n    }\n\n    .timeline-comments p {\n      margin: 4px 0 0 0;\n      color: #495057;\n      line-height: 1.4;\n    }\n\n    .empty-state {\n      text-align: center;\n      padding: 60px 20px;\n      color: #7f8c8d;\n    }\n\n    @media (max-width: 768px) {\n      .timeline {\n        padding-left: 30px;\n      }\n\n      .timeline-marker {\n        left: -27px;\n        width: 12px;\n        height: 12px;\n      }\n\n      .timeline-header {\n        flex-direction: column;\n        gap: 12px;\n        align-items: flex-start;\n      }\n\n      .timeline-meta {\n        align-items: flex-start;\n      }\n\n      .status-change {\n        flex-wrap: wrap;\n      }\n    }\n  `],\n  imports: [CommonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], ReleaseHistoryComponent);\nexport { ReleaseHistoryComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}