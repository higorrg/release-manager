version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: release-manager-db-prod
    environment:
      POSTGRES_DB: releasemanager
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - release-manager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d releasemanager"]
      interval: 30s
      timeout: 10s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: release-manager-keycloak-prod
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ${DB_USER:-admin}
      KC_DB_PASSWORD: ${DB_PASSWORD:-admin123}
      KC_HOSTNAME: ${KC_HOSTNAME:-localhost}
      KC_HOSTNAME_PORT: ${KC_PORT:-8080}
      KC_HOSTNAME_STRICT: true
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HTTP_ENABLED: false
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/tls.key
    ports:
      - "${KC_PORT:-8080}:8080"
      - "${KC_HTTPS_PORT:-8443}:8443"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./keycloak/certs:/opt/keycloak/conf
    command: ["start", "--import-realm"]
    networks:
      - release-manager-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.jvm
    container_name: release-manager-backend-prod
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/releasemanager
      QUARKUS_DATASOURCE_USERNAME: ${DB_USER:-admin}
      QUARKUS_DATASOURCE_PASSWORD: ${DB_PASSWORD:-admin123}
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/release-manager
      QUARKUS_OIDC_CLIENT_ID: release-manager-backend
      QUARKUS_OIDC_CREDENTIALS_SECRET: ${OIDC_CLIENT_SECRET}
      AZURE_STORAGE_CONNECTION_STRING: ${AZURE_STORAGE_CONNECTION_STRING}
      AZURE_STORAGE_CONTAINER_NAME: ${AZURE_STORAGE_CONTAINER_NAME:-releases}
    ports:
      - "${BACKEND_PORT:-8081}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - release-manager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: release-manager-frontend-prod
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://backend:8080}
      KEYCLOAK_URL: ${KEYCLOAK_URL:-http://keycloak:8080}
      KEYCLOAK_REALM: release-manager
      KEYCLOAK_CLIENT_ID: release-manager-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - release-manager-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  release-manager-network:
    driver: bridge
