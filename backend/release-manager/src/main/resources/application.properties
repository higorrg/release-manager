# Application Configuration
quarkus.application.name=Release Manager API
quarkus.application.version=1.0.0

# HTTP Configuration
quarkus.http.port=8080

# Datasource (PostgreSQL)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=releasemanager
quarkus.datasource.password=releasemanager
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/release_manager_db
quarkus.datasource.jdbc.max-size=16

# Hibernate ORM Configuration
# We use 'none' because Liquibase will manage the schema.
quarkus.hibernate-orm.database.generation=none
# Log SQL statements for easier debugging in dev
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=no-file

# Liquibase Configuration
# Run migrations on startup
quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.change-log=db/changelog/db.changelog-master.xml

# OIDC (Keycloak) Configuration
# URL to the Keycloak realm
quarkus.oidc.auth-server-url=http://localhost:8180/realms/releasemanager
# The client-id of this application
quarkus.oidc.client-id=release-manager-backend
# The secret for the client-id
quarkus.oidc.credentials.secret=your-client-secret

# Azure Blob Storage Configuration
# Connection string should be set via environment variable for security
quarkus.azure.storage.blob.connection-string=${AZURE_STORAGE_CONNECTION_STRING:DefaultEndpointsProtocol=http,AccountName=devstoreaccount1,AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==,BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;}
# The name of the blob container for releases
quarkus.azure.storage.blob.container-name=releases

# CORS for Frontend Development
quarkus.http.cors=true
quarkus.http.cors.origins=/http:\/\/localhost:4200.*/
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
